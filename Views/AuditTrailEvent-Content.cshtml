@using OrchardCore.ContentManagement
@using OrchardCore.AuditTrail.Providers

@{
    var auditTrailEvent = (AuditTrailEvent)Model.AuditTrailEvent;
    var contentItem = (ContentItem)Model.ContentItem;
    var versionNumber = (int)Model.VersionNumber;
    var availableVersionsCount = (int)Model.AvailableVersionsCount;
    var diffNodes = (List<DiffNode>)Model.DiffNodes;
}

<script asp-src="~/Finitive.Assets/vendors/diff/diff.min.js" debug-src="~/Finitive.Assets/vendors/diff/diff.js" at="Foot"></script>

<div>
    @T["ContentItemId:"] <strong>@contentItem.ContentItemId</strong>
</div>

@if (contentItem != null)
{
    @T["{0}:", contentItem.ContentType]

    if (auditTrailEvent.EventName == ContentAuditTrailEventProvider.Removed)
    {
        <strong>@contentItem.DisplayText</strong>
    } 
    else 
    {
        <a edit-for="@contentItem">@contentItem.DisplayText</a>
    }

    if (availableVersionsCount != versionNumber)
    {
        <div>
            <a asp-action="Detail" 
                asp-controller="Content" 
                asp-route-versionNumber="@versionNumber" 
                asp-route-auditTrailEventId="@auditTrailEvent.Id">
                @T["Version {0}", versionNumber]
            </a>
        </div>
    }
}
else
{
    <div>
        @T["Version {0}", versionNumber]
    </div>
}

@if (!string.IsNullOrEmpty(auditTrailEvent.Comment)) 
{
    <div>
        @T["Comment:"]
    </div>
    <div>
        @Html.Raw(auditTrailEvent.Comment)
    </div>
}

@if (diffNodes != null && diffNodes.Any()) 
{
    <div class="form-group">
        <div class="custom-control custom-switch" data-toggle="collapse" data-target="#beforeAfter" aria-expanded="false">
            <input type="checkbox" class="custom-control-input" id="showBeforeAfter">
            <label class="custom-control-label" for="showBeforeAfter">@T["Show before/after"]</label>
        </div>

        <div class="custom-control custom-switch" data-toggle="collapse" data-target="#diff" aria-expanded="false">
            <input type="checkbox" class="custom-control-input" id="showDiff" checked>
            <label class="custom-control-label" for="showDiff">@T["Show diff"]</label>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-hover table-striped table-bordered mt-4">
            <thead>
                <tr>
                    <th scope="col">@T["Action"]</th>
                    <th scope="col">@T["Context"]</th>
                    <th class="collapse" scope="col" id="beforeAfter">@T["Before"]</th>
                    <th class="collapse" scope="col" id="beforeAfter">@T["After"]</th>
                    <th class="collapse show" scope="col" id="diff">@T["Diff"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var node in diffNodes)
                {
                    <tr>
                        <td>@T[node.Type.ToString()]</td>
                        <td>@node.Context</td>
                        <td class="collapse" id="beforeAfter" data-previous>@(node.Previous)</td>
                        <td class="collapse" id="beforeAfter" data-current>@(node.Current)</td>
                        <td class="collapse show" id="diff" data-diff></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<script at="Foot" type="text/javascript">
    $(function () {
        var previous = [];
        var current = [];
        var i = 0;

        $('[data-previous]').each(function () {
            previous.push($(this).html());
        });

        $('[data-current]').each(function() {
            current.push($(this).html());
        });

        $('[data-diff]').each(function () {
            var diff = Diff.diffWords(previous[i], current[i]),
            display = $(this),
            fragment = document.createDocumentFragment();

            diff.forEach(function (part) {
                color = part.added ? 'green' :
                        part.removed ? 'red' : 'black';
                fontWeight = part.added ? 'bold' :
                        part.removed ? 'bold' : 'normal';
                span = document.createElement('span');

                span.style.color = color;
                span.style.fontWeight = fontWeight;
                span.appendChild(document.createTextNode(part.value));
                fragment.appendChild(span);
            });

            display.html(fragment);
            i++;
        });
    });
</script>

@using OrchardCore.ContentManagement
@using OrchardCore.AuditTrail.Providers
@using OrchardCore.AuditTrail.Extensions

@{
    var contentItem = (ContentItem)Model.ContentItem;
    var auditTrailEvent = (AuditTrailEvent)Model.AuditTrailEvent;
    var eventDescriptor = (AuditTrailEventDescriptor)Model.Descriptor;
    var versionNumber = (int)Model.VersionNumber;
    var versionText = T[$"Version {versionNumber}"];
    var eventName = eventDescriptor.LocalizedName.Value.ToLowerInvariant();
}

@if (contentItem != null)
{
    var contentType = contentItem.ContentType;
    var displayText = contentItem.DisplayText;
    var itemEditLink = await Orchard.GetItemEditLinkAsync(displayText, contentItem);

    if (auditTrailEvent.EventName == ContentAuditTrailEventProvider.Restored)
    {
        @T["The {0} {1} was restored as {2}",
        contentType,
        Html.Raw(itemEditLink),
        Html.ActionLink(versionText.Value, "Detail", "Content",
        new
        {
            area = "OrchardCore.AuditTrail",
            auditTrailEventId = auditTrailEvent.Id,
            versionNumber = versionNumber
        }, null)]
    }
    else if (auditTrailEvent.EventName == ContentAuditTrailEventProvider.Removed)
    {
        @T["The {0} <strong>{1}</strong> was {2}.",
        contentType,
        displayText,
        eventName]
    }
    else
    {
        @T["{0} of the {1} {2} was {3}", Html.ActionLink(versionText.Value, "Detail", "Content",
        new
        {
            area = "OrchardCore.AuditTrail",
            auditTrailEventId = auditTrailEvent.Id,
            versionNumber = versionNumber
        }, null),
        contentType,
        Html.Raw(itemEditLink),
        eventName]
    }
}
else
{
    @T["<strong>{0}</strong> of content item <strong>[untitled]</strong> was {1}.",
    versionText.Value,
    eventName]
}